<?xml version="1.0" encoding="UTF-8"?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">
    <service verb="create" noun="Example" displayName="Create an Example entity" type="entity-auto" allow-remote="true">
	<description>To insert new record into database</description>
        <in-parameters>
            <auto-parameters include="nonpk"/>
            <parameter name="exampleId" default="inline"/>
            <parameter name="exampleName"/>
            <!-- This is automatic based on parameter type: <parameter name="exampleSize"><number-decimal/></parameter> -->
            <parameter name="exampleDate"></parameter>
            <parameter name="examplePrice"></parameter>
            <parameter name="exampleQuantity"></parameter>
	    <parameter name="lastUpdatedStamp" default="ec.user.nowTimestamp"></parameter>
       <!-- <parameter name="lastUpdatedStamp"></parameter> -->
        </in-parameters>
        <out-parameters>
            <!--<auto-parameters include="pk" required="true"/>-->
            <parameter name="exampleId"></parameter>
        </out-parameters>
    </service>

    <service verb="update" noun="Example" displayName="Update an Example" allow-remote="true">
	<description>To update record in database</description>
        <in-parameters>
            <auto-parameters include="pk" required="true"/>
	    <auto-parameters entity-name="Example" include="nonpk"/>
	    <parameter name="exampleId" required="true"/>
            <parameter name="exampleName"/>
            <!-- This is automatic based on parameter type: <parameter name="exampleSize"><number-decimal/></parameter> -->
            <parameter name="exampleDate"></parameter>
            <parameter name="examplePrice"></parameter>
            <parameter name="exampleQuantity"></parameter>
	    <parameter name="lastUpdatedStamp" default="ec.user.nowTimestamp"></parameter>
	    <!--<parameter name="exampleId" required="true"/>-->
        </in-parameters>
        <out-parameters>
            <parameter name="exampleId"/>
        </out-parameters>

	<actions>
            <entity-find-one entity-name="Example" value-field="Example">
                <field-map field-name="exampleId"/></entity-find-one>
            <if condition="Example != null"><then>
		<if condition = "exampleName"> 
                        <log message="found"/>
                        <set field="Example.exampleName" from="exampleName"/>
                </if>

                <if condition = "exampleDate"> 
                        <set field="Example.exampleDate" from="exampleDate"/>
                </if>

                <if condition = "examplePrice"> 
                        <set field="Example.examplePrice" from="examplePrice"/>
                </if>

                <if condition = "exampleQuantity"> 
                        <set field="Example.exampleQuantity" from="exampleQuantity"/>
                </if>
	    
	    <entity-update value-field="Example"/>



            </then>
	    

	    <!-- IF WE WANT TO CREATE IN CONDITION OF NO RECORD FOUND-->
            <else>
                <service-call name="create#Example"
                        in-map="[exampleId:exampleId, exampleName:exampleName, exampleQuantity:exampleQuantity, examplePrice:examplePrice, exampleDate:exampleDate]"/>
            </else>
	    </if>
        </actions>
    </service>

</services>
